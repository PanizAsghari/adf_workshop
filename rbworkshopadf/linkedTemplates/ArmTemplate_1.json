{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "rbworkshopadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Trixies_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "module5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Trixies_History.csv",
						"container": "module5"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Book_Id",
						"type": "String"
					},
					{
						"name": "ISBN",
						"type": "String"
					},
					{
						"name": "ISBN13",
						"type": "String"
					},
					{
						"name": "My_Rating",
						"type": "String"
					},
					{
						"name": "Date_Read",
						"type": "String"
					},
					{
						"name": "Date_Added",
						"type": "String"
					},
					{
						"name": "Bookshelves",
						"type": "String"
					},
					{
						"name": "Exclusive_Shelf",
						"type": "String"
					},
					{
						"name": "My_Review",
						"type": "String"
					},
					{
						"name": "Spoiler",
						"type": "String"
					},
					{
						"name": "Private_Notes",
						"type": "String"
					},
					{
						"name": "Read_Count",
						"type": "String"
					},
					{
						"name": "Original_Purchase_Date",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReadersBooksInnerJoin')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "module5",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "module5"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_baj')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_baj",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "adftutotial/input/book_listing.csv"
							},
							{
								"name": "Destination",
								"value": "adftutotial/output/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_baj",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_baj",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LabPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_m9t",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "training/crime-data-2016/"
							},
							{
								"name": "Destination",
								"value": "dwtemp/03.02/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_m9t",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_m9t",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy_m9t",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/asghari.pz@gmail.com/03-Data-Ingestion-Via-ADF/includes/Databricks-Data-Transformations",
							"baseParameters": {
								"accountName": "rbworkshopblob",
								"accountKey": "4Z+VBfrGI0kPa6hw5ixkRb8oYWmWavA9JVcGPsGf9oLXOv1upXbR48wucsf+fZeTRsrIjn+WreuQ+AStVneelw==",
								"containerName": "dwtemp"
							}
						},
						"linkedServiceName": {
							"referenceName": "LabNotebook",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_ImportData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StandardCost",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ListPrice",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 8
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DiscontinuedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DiscontinuedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ThumbNailPhoto",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ThumbNailPhoto",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "ThumbnailPhotoFileName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ThumbnailPhotoFileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProductStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Validate Import Rows",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SalesLT].[usp_CheckProductStaging]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send Failure Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Validate Import Rows",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": "https://prod-04.eastus.logic.azure.com:443/workflows/e2fbe2f860134fe28f8163e763d60b08/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=EsCg5Y1krX7ifOr8DpuTsvQ_oUlCGy2iV4NBoB4GiFk",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"ErrorMessage": "@{activity('Validate Import Rows').error.message}",
								"EmailTo": "@{pipeline().parameters.EmailTo}"
							}
						}
					},
					{
						"name": "Send success Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Validate Import Rows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": "https://prod-04.eastus.logic.azure.com:443/workflows/e2fbe2f860134fe28f8163e763d60b08/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=EsCg5Y1krX7ifOr8DpuTsvQ_oUlCGy2iV4NBoB4GiFk",
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"PipelineStatus": "Completed Successfully",
								"EmailTo": "@{pipeline().parameters.EmailTo}"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"EmailTo": {
						"type": "string",
						"defaultValue": "asghari.pz@gmail.com"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BookReading')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bookscsv",
								"type": "DatasetReference"
							},
							"name": "bookscsv"
						},
						{
							"dataset": {
								"referenceName": "Trixies_History",
								"type": "DatasetReference"
							},
							"name": "TrixiesHistory"
						},
						{
							"dataset": {
								"referenceName": "Keikos_Historycsv",
								"type": "DatasetReference"
							},
							"name": "KeikosHistory"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ReadersBooksInnerJoin",
								"type": "DatasetReference"
							},
							"name": "ReadersBooksInnerJoin"
						}
					],
					"transformations": [
						{
							"name": "AddReaderNameT"
						},
						{
							"name": "AddReaderNameK"
						},
						{
							"name": "AllReaders"
						},
						{
							"name": "SortReadingHistory"
						},
						{
							"name": "join1"
						},
						{
							"name": "RemoveDuplicateColumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Book_Id as integer '##0',",
						"          ISBN as string,",
						"          ISBN13 as string,",
						"          Title as string,",
						"          Author as string,",
						"          {Author_l-f} as string,",
						"          Additional_Authors as string,",
						"          Average_Rating as float '0.00',",
						"          Publisher as string,",
						"          Binding as string,",
						"          Number_of_Pages as integer '##0',",
						"          Year_Published as integer '##0',",
						"          Original_Publication_Year as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> bookscsv",
						"source(output(",
						"          Book_Id as integer '##0',",
						"          ISBN as string,",
						"          ISBN13 as string,",
						"          My_Rating as integer '##0',",
						"          Date_Read as date 'dd/MM/yyyy',",
						"          Date_Added as date 'dd/MM/yyyy',",
						"          Bookshelves as string,",
						"          Exclusive_Shelf as string,",
						"          My_Review as string,",
						"          Spoiler as boolean,",
						"          Private_Notes as string,",
						"          Read_Count as integer '##0',",
						"          Original_Purchase_Date as date 'dd/MM/yyyy'",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> TrixiesHistory",
						"source(output(",
						"          Book_Id as integer '##0',",
						"          ISBN as string,",
						"          ISBN13 as string,",
						"          My_Rating as integer '##0',",
						"          Date_Read as date 'dd/MM/yyyy',",
						"          Date_Added as date 'dd/MM/yyyy',",
						"          Bookshelves as string,",
						"          Exclusive_Shelf as string,",
						"          My_Review as string,",
						"          Spoiler as boolean,",
						"          Read_Count as integer '##0',",
						"          Original_Purchase_Date as date 'dd/MM/yyyy'",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> KeikosHistory",
						"TrixiesHistory derive(Reader = 'Trixie Belden') ~> AddReaderNameT",
						"KeikosHistory derive(Reader = 'Keiko Brooks') ~> AddReaderNameK",
						"AddReaderNameT, AddReaderNameK union(byName: true)~> AllReaders",
						"AllReaders sort(asc(Book_Id, true)) ~> SortReadingHistory",
						"SortReadingHistory, bookscsv join(AllReaders@Book_Id == bookscsv@Book_Id",
						"     && AllReaders@ISBN == bookscsv@ISBN,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          My_Rating,",
						"          Date_Read,",
						"          Date_Added,",
						"          Bookshelves,",
						"          Exclusive_Shelf,",
						"          My_Review,",
						"          Spoiler,",
						"          Private_Notes,",
						"          Read_Count,",
						"          Original_Purchase_Date,",
						"          Reader,",
						"          Book_Id = bookscsv@Book_Id,",
						"          Title,",
						"          Author,",
						"          {Author_l-f},",
						"          Additional_Authors,",
						"          Average_Rating,",
						"          Publisher,",
						"          Binding,",
						"          Number_of_Pages,",
						"          Year_Published,",
						"          Original_Publication_Year",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RemoveDuplicateColumns",
						"RemoveDuplicateColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ReadersBooksInnerJoin"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Trixies_History')]",
				"[concat(variables('factoryId'), '/datasets/ReadersBooksInnerJoin')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_ImportData_Control')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[SalesLT].[usp_GetRowCountProductStaging]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ProductStaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Actions on Staging Row Count",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup1').output.firstRow,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "usp_TruncateProductStaging",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[SalesLT].[usp_TruncateProductStaging]"
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Execute Pipelineon false",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "usp_TruncateProductStaging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline_ImportData",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Execute Pipeline on true",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline_ImportData",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline_ImportData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/plRunBookReadingDataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "BookReading",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"bookscsv": {},
									"TrixiesHistory": {},
									"KeikosHistory": {},
									"ReadersBooksInnerJoin": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/BookReading')]"
			]
		}
	]
}